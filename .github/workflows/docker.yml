name: Docker Image CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Lint the codebase
      uses: golangci/golangci-lint-action@v1
      with:
        version: v1.27
        args: -E goimports -E godot
    - name: Setup Docker Buildx
      uses: crazy-max/ghaction-docker-buildx@v3
      with:
        buildx-version: latest
        qemu-version: latest
    - name: Login to Docker Registry
      if: ${{ github.event_name == 'push' && github.actor == github.repository_owner }}
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
    - name: Build and push the Docker images
      run: |
        BRANCH_NAME="${GITHUB_REF#refs/heads/}"
        DATE="$(date -u +%Y-%m-%dT%H:%M:%SZ)"
        REF="${BRANCH_NAME:-master}"
        OTHER_ARGS=""
        CACHE_OTHER_ARGS=""

        if [[ "${GITHUB_ACTOR}" == "${GITHUB_REPOSITORY%/*}" ]]; then
          OTHER_ARGS="${OTHER_ARGS} --platform linux/arm/v7,linux/arm64,linux/amd64 --push --cache-to type=registry,ref=${GITHUB_REPOSITORY}-cache,mode=max"
          CACHE_OTHER_ARGS="${CACHE_OTHER_ARGS} --push"
        fi

        if [[ "${GITHUB_REF}" =~ ^refs\/tags\/v.*$ ]]; then
          REF="${GITHUB_REF//refs\/tags\/v}"
          OTHER_ARGS="${OTHER_ARGS} -t ${GITHUB_REPOSITORY}:${GITHUB_REF//refs\/tags\/}"
          if ! [[ ${GITHUB_REF} =~ ^refs\/tags\/v.*-.*$ ]]; then
            OTHER_ARGS="${OTHER_ARGS} -t ${GITHUB_REPOSITORY}:latest"
          fi
        fi

        if ! docker buildx imagetools inspect ${GITHUB_REPOSITORY}-build-cache:latest > /dev/null 2>&1; then
          docker pull alpine:latest
          docker tag alpine:latest ${GITHUB_REPOSITORY}-build-cache:latest

          if [[ "${GITHUB_ACTOR}" == "${GITHUB_REPOSITORY%/*}" ]]; then
            docker push ${GITHUB_REPOSITORY}-build-cache:latest
          fi
        fi

        docker buildx build \
          --target release \
          --cache-from ${GITHUB_REPOSITORY}-cache \
          --build-arg VERSION=${REF} \
          --build-arg COMMIT=${GITHUB_SHA} \
          --build-arg DATE=${DATE} \
          --build-arg REPOSITORY=${GITHUB_REPOSITORY} \
          -t ${GITHUB_REPOSITORY}:${GITHUB_SHA} \
          -t ${GITHUB_REPOSITORY}:${REF} \
          -f Dockerfile.buildkit \
          --load \
          ${OTHER_ARGS} .

        docker buildx build \
          --target build-cache \
          --build-arg VERSION=${REF} \
          --build-arg COMMIT=${GITHUB_SHA} \
          --build-arg DATE=${DATE} \
          --build-arg REPOSITORY=${GITHUB_REPOSITORY} \
          -t ${GITHUB_REPOSITORY}-build-cache:latest \
          -f Dockerfile.buildkit \
          ${CACHE_OTHER_ARGS} .

        docker run -it --rm ${GITHUB_REPOSITORY}:${GITHUB_SHA} -v
